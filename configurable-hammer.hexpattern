Consideration: {
    // -- position: vec3, size: number, facing: vec3
    Gemini Decomposition

    // Rotate the facing vector's components, e.g. (0, 1, 0) -> (1, 0, 0)
    Vector Disintegration
    Rotation Gambit
    Vector Exaltation
    
    // Get the third cardinal vector using a dot product.
    Gemini Decomposition
    Rotation Gambit
    Division Distillation
    // The two surface vectors we have now are guaranteed to be at a right angle from both the facing vector and eachother.
    // -- position: vec3, size: number, surface1: vec3, surface2: vec3
    
    // Grab the size value from further down and duplicate and square it to get the area, this is the amount of iterations we'll need to do.
    Rotation Gambit
    Gemini Decomposition
    Numerical Reflection: 2
    Power Distillation
    // -- position: vec3, surface1: vec3, surface2: vec3, size: number, area: number
    
    // This part creates a list of length x filled with copies of `size`, where x is the area calculated earlier.
    // This list can later be iterated over by thoths.
    Gemini Decomposition
    Huginn's Gambit
    Gemini Gambit
    Muninn's Reflection
    Flock's Gambit
    // -- position: vec3, surface1: vec3, surface2: vec3, [size: number...]

    // Store a loop index in the ravenmind
    Numerical Reflection: 0
    Huginn's Gambit

    Consideration: {
        // position: vec3, surface1: vec3, surface2: vec3, size: number (index: number)

        // Duplicate the size, we need it in both of our upcoming calculations.
        Gemini Decomposition
        // -- position: vec3, surface1: vec3, surface2: vec3, size: number, size: number (index: number)
        
        // Calculate the first offset
        // This is equal to `index % size - floor(size / 2)`
        Gemini Decomposition
        Numerical Reflection: 2
        Division Distillation
        Floor Purification
        Jester's Gambit
        // -- position: vec3, surface1: vec3, surface2: vec3, size: number, shift1: number, size: number (index: number)
        Muninn's Reflection
        Jester's Gambit
        Modulus Distillation
        Jester's Gambit
        Subtractive Distillation
        // -- position: vec3, surface1: vec3, surface2: vec3, size: number, offset1: number (index: number)

        Jester's Gambit

        // Calculate the second
        // This is equal to `floor(index / size) - floor(size / 2)`
        Gemini Decomposition
        Numerical Reflection: 2
        Division Distillation
        Floor Purification
        Jester's Gambit
        Muninn's Reflection
        Jester's Gambit
        Division Distillation
        Floor Purification
        Jester's Gambit
        Subtractive Distillation
        // -- position: vec3, surface1: vec3, surface2: vec3, offset1: number, offset2: number (index: number)

        // Now the hard part is over, we can multiply our surface axis vectors with their respective offset values.
        Rotation Gambit
        Multiplicative Distillation
        Rotation Gambit II
        Multiplicative Distillation
        // -- position: vec3, offset1: vec3, offset2: vec3
        
        // Then we just add the resulting vectors to our position vector and break the block.
        Additive Distillation
        Additive Distillation
        Break Block

        // Update the loop index to prepare for the next iteration
        Muninn's Reflection
        Numerical Reflection: 1
        Additive Distillation
        Huginn's Gambit
    Consideration: }
    Jester's Gambit
    
    Thoth's Gambit
    // -- position: vec3, surface1: vec3, surface2: vec3, [junk: ?...]
Consideration: }
